package core;

import core.MapEntities.MapEntity;
import core.Triggers.*;
import main.Main;

public class Map 
{
	public static final int MAX_ELEMENTS = 256;
	
	String name;
	int[] backgroundRGB;
	TriggerGameEvent[] triggerGEs;
	TriggerGravity[] triggerGs;
	TriggerHurt[] triggerHs;
	TriggerLoad[] triggerLs;
	TriggerMove[] triggerMs;
	TriggerShader[] triggerSHs;
	TriggerSound[] triggerSOs;
	TriggerStartTrigger[] triggerSTAs;
	TriggerStopTrigger[] triggerSTOs;
	Entity[] entities;
	
	public Map(String name)
	{
		this.name = name;
		backgroundRGB = new int[3];
		triggerGEs = new TriggerGameEvent[MAX_ELEMENTS];
		triggerGs = new TriggerGravity[MAX_ELEMENTS];
		triggerHs = new TriggerHurt[MAX_ELEMENTS];
		triggerLs = new TriggerLoad[MAX_ELEMENTS];
		triggerMs = new TriggerMove[MAX_ELEMENTS];
		triggerSHs = new TriggerShader[MAX_ELEMENTS];
		triggerSOs = new TriggerSound[MAX_ELEMENTS];
		triggerSTAs = new TriggerStartTrigger[MAX_ELEMENTS];
		triggerSTOs = new TriggerStopTrigger[MAX_ELEMENTS];
		entities = new Entity[MAX_ELEMENTS];
	}
	
	public void setBackground(int r, int g, int b)
	{
		backgroundRGB[0] = r;
		backgroundRGB[1] = g;
		backgroundRGB[2] = b;
	}
	
	public void add(TriggerGameEvent ge)
	{
		for (int i = 0; i < triggerGEs.length; i++)
		{
			if (triggerGEs[i] == null)
			{
				triggerGEs[i] = ge;
				Main.println("Added game event trigger.");
				return;
			}
		}
		Main.println("Failed to add game event trigger.");
	}
	
	public void add(TriggerGravity ge)
	{
		for (int i = 0; i < triggerGEs.length; i++)
		{
			if (triggerGs[i] == null)
			{
				triggerGs[i] = ge;
				Main.println("Added game event trigger.");
				return;
			}
		}
		Main.println("Failed to add game event trigger.");
	}
	
	public void add(TriggerHurt ge)
	{
		for (int i = 0; i < triggerGEs.length; i++)
		{
			if (triggerHs[i] == null)
			{
				triggerHs[i] = ge;
				Main.println("Added game event trigger.");
				return;
			}
		}
		Main.println("Failed to add game event trigger.");
	}
	
	public void add(TriggerLoad ge)
	{
		for (int i = 0; i < triggerGEs.length; i++)
		{
			if (triggerLs[i] == null)
			{
				triggerLs[i] = ge;
				Main.println("Added game event trigger.");
				return;
			}
		}
		Main.println("Failed to add game event trigger.");
	}
	
	public void add(TriggerMove ge)
	{
		for (int i = 0; i < triggerGEs.length; i++)
		{
			if (triggerGEs[i] == null)
			{
				triggerGEs[i] = ge;
				Main.println("Added game event trigger.");
				return;
			}
		}
		Main.println("Failed to add game event trigger.");
	}
	
	public void add(TriggerGameEvent ge)
	{
		for (int i = 0; i < triggerGEs.length; i++)
		{
			if (triggerGEs[i] == null)
			{
				triggerGEs[i] = ge;
				Main.println("Added game event trigger.");
				return;
			}
		}
		Main.println("Failed to add game event trigger.");
	}
	
	public void add(TriggerGameEvent ge)
	{
		for (int i = 0; i < triggerGEs.length; i++)
		{
			if (triggerGEs[i] == null)
			{
				triggerGEs[i] = ge;
				Main.println("Added game event trigger.");
				return;
			}
		}
		Main.println("Failed to add game event trigger.");
	}
	
	public void add(TriggerGameEvent ge)
	{
		for (int i = 0; i < triggerGEs.length; i++)
		{
			if (triggerGEs[i] == null)
			{
				triggerGEs[i] = ge;
				Main.println("Added game event trigger.");
				return;
			}
		}
		Main.println("Failed to add game event trigger.");
	}
	
	public void add(TriggerGameEvent ge)
	{
		for (int i = 0; i < triggerGEs.length; i++)
		{
			if (triggerGEs[i] == null)
			{
				triggerGEs[i] = ge;
				Main.println("Added game event trigger.");
				return;
			}
		}
		Main.println("Failed to add game event trigger.");
	}
}
